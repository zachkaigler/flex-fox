{"version":3,"sources":["components/FoxCard.js","components/App.js","reportWebVitals.js","index.js"],"names":["FoxCard","img","num","className","src","alt","style","height","App","useState","flexDirValue","setFlexDirValue","flexWrapValue","setFlexWrapValue","justifyContentValue","setJustifyContentValue","foxes","setFoxes","getRandomInt","max","randNum","Math","floor","random","useEffect","arr","counter","foxPics","map","foxPic","id","href","name","onChange","e","target","value","handleDirChange","handleWrapChange","handleJustifyChange","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f0772b38.chunk.js","sourcesContent":["function FoxCard({ img, num }) {\n    return (\n        <div className=\"card\">\n            <img src={img} alt=\"fox\" style={{height: \"170px\"}}/>\n            <div className=\"num\">{num}</div>\n        </div>\n    )\n}\n\nexport default FoxCard","import FoxCard from './FoxCard'\nimport { useState, useEffect } from 'react'\n\nfunction App() {\n  const [flexDirValue, setFlexDirValue] = useState(\"a\")\n  const [flexWrapValue, setFlexWrapValue] = useState(\"1\")\n  const [justifyContentValue, setJustifyContentValue] = useState(\"ff\")\n  const [foxes, setFoxes] = useState([])\n\n  // Number randomizer\n  function getRandomInt(max) {\n    let randNum = Math.floor(Math.random() * max);\n    if (randNum > 0) {\n      return randNum\n    } else {\n      return 1\n    }\n  }\n\n  // Generates a random array of foxes on page load\n  useEffect(() => {\n    setFoxes(function() {\n        let arr = []\n        let counter = 0\n        while (counter < getRandomInt(201) ) {\n          counter += 1\n          arr = [...arr, { img: `https://randomfox.ca/images/${getRandomInt(124)}.jpg`, num: counter} ]\n        }\n        return arr\n      })\n  }, [])\n  \n  // Returns an array of FoxCard components for each fox to render\n  const foxPics = foxes.map(function(foxPic) {\n    return <FoxCard key={foxPic.num}\n                    img={foxPic.img}\n                    num={foxPic.num}\n          />\n  })\n\n  function handleDirChange(e) {\n    setFlexDirValue(e.target.value)\n  }\n\n  function handleWrapChange(e) {\n    setFlexWrapValue(e.target.value)\n  }\n\n  function handleJustifyChange(e) {\n    setJustifyContentValue(e.target.value)\n  }\n\n  return (\n    <div className=\"page\">\n      <div className=\"sticky\">\n        <div id=\"header\">\n          <img src=\"https://i.imgur.com/m3t26eT.png\" alt=\"logo\" style={{height: \"80px\"}}/>\n          <h2>An adorable Flexbox visualizer.</h2>\n          <h3>Made with the <a href=\"https://randomfox.ca/\">Random Fox API.</a></h3>\n        </div>\n        <div id=\"filters\">\n            <span className=\"select-label select-label-bold\">.container &#123; </span><span className=\"select-label\">flex-direction:</span>\n            <select name=\"flex-direction\" onChange={e => handleDirChange(e)}>\n              {/* <option value=\"a\">flex-direction</option> */}\n              <option value=\"a\">row;</option>\n              <option value=\"b\">row-reverse;</option>\n              <option value=\"c\">column;</option>\n              <option value=\"d\">column-reverse;</option>\n            </select>\n            <span className=\"select-label\"> flex-wrap:</span>\n            <select name=\"flex-wrap\" onChange={e => handleWrapChange(e)}>\n              {/* <option value=\"1\">flex-wrap</option> */}\n              <option value=\"1\">wrap;</option>\n              <option value=\"2\">wrap-reverse;</option>\n              <option value=\"3\">nowrap;</option>\n            </select>\n            <span className=\"select-label\"> justify-content:</span>\n            <select name=\"justify-content\" onChange={e => handleJustifyChange(e)}>\n              {/* <option value=\"ff\">justify-content</option> */}\n              <option value=\"ff\">space-evenly;</option>\n              <option value=\"dd\">space-between;</option>\n              <option value=\"ee\">space-around;</option>\n              <option value=\"cc\">center;</option>\n              <option value=\"aa\">flex-start;</option>\n              <option value=\"bb\">flex-end;</option>\n            </select>\n            <span className=\"select-label select-label-bold\"> &#125;</span>\n        </div>\n      </div>\n      {/* Flex container!!! */}\n      <div className={ `${flexDirValue}-${flexWrapValue}-${justifyContentValue}` }>\n        {/* Collection of fox pics to display */}\n        {foxPics}\n      </div>\n    </div>\n  );\n  \n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}