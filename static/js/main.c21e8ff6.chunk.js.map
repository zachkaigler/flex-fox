{"version":3,"sources":["components/FoxCard.js","components/App.js","reportWebVitals.js","index.js"],"names":["FoxCard","img","num","className","src","alt","style","width","App","useState","flexDirValue","setFlexDirValue","flexWrapValue","setFlexWrapValue","justifyContentValue","setJustifyContentValue","alignItemsValue","setAlignItemsValue","foxes","setFoxes","FlexContainer","styled","div","getRandomInt","max","randNum","Math","floor","random","useEffect","arr","counter","foxPics","map","foxPic","id","height","href","name","onChange","e","target","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c21e8ff6.chunk.js","sourcesContent":["function FoxCard({ img, num }) {\n    return (\n        <div className=\"card\">\n            <img src={img} alt=\"fox\" style={{width: \"300px\"}}/>\n            <div className=\"num\">{num}</div>\n        </div>\n    )\n}\n\nexport default FoxCard","import FoxCard from './FoxCard'\nimport { useState, useEffect } from 'react'\nimport styled from 'styled-components'\n\nfunction App() {\n  const [flexDirValue, setFlexDirValue] = useState(\"row\")\n  const [flexWrapValue, setFlexWrapValue] = useState(\"wrap\")\n  const [justifyContentValue, setJustifyContentValue] = useState(\"space-between\")\n  const [alignItemsValue, setAlignItemsValue] = useState(\"center\")\n  const [foxes, setFoxes] = useState([])\n\n  const FlexContainer = styled.div`\n    display: flex;\n    flex-direction: ${flexDirValue};\n    flex-wrap: ${flexWrapValue};\n    justify-content: ${justifyContentValue};\n    align-items: ${alignItemsValue};\n    background-color: #fff1e3;\n    padding-bottom: 75px;\n    margin-left: 10%;\n    margin-right: 10%;\n  `\n\n  // Number randomizer\n  function getRandomInt(max) {\n    let randNum = Math.floor(Math.random() * max);\n    if (randNum > 0) {\n      return randNum\n    } else {\n      return 1\n    }\n  }\n\n  // Generates a random array of foxes on page load\n  useEffect(() => {\n    setFoxes(function() {\n        let arr = []\n        let counter = 0\n        while (counter < getRandomInt(201) ) {\n          counter += 1\n          arr = [...arr, {img: `https://randomfox.ca/images/${getRandomInt(124)}.jpg`, num: counter} ]\n        }\n        return arr\n      })\n  }, [])\n  \n  // Returns an array of FoxCard components for each fox to render\n  const foxPics = foxes.map(function(foxPic) {\n    return <FoxCard key={foxPic.num}\n                    img={foxPic.img}\n                    num={foxPic.num}\n          />\n  })\n\n  return (\n    <>\n      <div className=\"page\">\n        <div className=\"sticky\">\n          <div id=\"header\">\n            <img src=\"https://i.imgur.com/m3t26eT.png\" alt=\"logo\" style={{height: \"80px\"}}/>\n            <h2>An adorable Flexbox visualizer.</h2>\n            <h3>Made with the <a href=\"https://randomfox.ca/\">Random Fox API.</a></h3>\n          </div>\n          <div id=\"filters\">\n              <span className=\"select-label select-label-bold\">.container &#123; </span><span className=\"select-label\">display: flex; flex-direction:</span>\n              <select name=\"flex-direction\" onChange={e => setFlexDirValue(e.target.value)}>\n                <option value=\"row\">row;</option>\n                <option value=\"row-reverse\">row-reverse;</option>\n                <option value=\"column\">column;</option>\n                <option value=\"column-reverse\">column-reverse;</option>\n              </select>\n              <span className=\"select-label\"> flex-wrap:</span>\n              <select name=\"flex-wrap\" onChange={e => setFlexWrapValue(e.target.value)}>\n                <option value=\"wrap\">wrap;</option>\n                <option value=\"wrap-reverse\">wrap-reverse;</option>\n                <option value=\"nowrap\">nowrap;</option>\n              </select>\n              <span className=\"select-label\"> justify-content:</span>\n              <select name=\"justify-content\" onChange={e => setJustifyContentValue(e.target.value)}>\n                <option value=\"space-between\">space-between;</option>\n                <option value=\"space-evenly\">space-evenly;</option>\n                <option value=\"space-around\">space-around;</option>\n                <option value=\"center\">center;</option>\n                <option value=\"flex-start\">flex-start;</option>\n                <option value=\"flex-end\">flex-end;</option>\n              </select>\n              <span className=\"select-label\"> align-items:</span>\n              <select name=\"justify-content\" onChange={e => setAlignItemsValue(e.target.value)}>\n                <option value=\"center\">center;</option>\n                <option value=\"flex-start\">flex-start;</option>\n                <option value=\"flex-end\">flex-end;</option>\n              </select>\n              <span className=\"select-label select-label-bold\"> &#125;</span>\n          </div>\n        </div>\n        <FlexContainer>\n          {foxPics}\n        </FlexContainer>\n      </div>\n      <a href=\"https://github.com/zachkaigler/flex-fox\" id=\"github\"><img src=\"https://i.imgur.com/Yt24doC.png\" alt=\"github\" style={{ height: \"75px\" }} /></a>\n    </>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}