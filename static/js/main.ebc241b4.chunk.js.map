{"version":3,"sources":["components/FoxCard.js","images/flex-fox.png","components/App.js","reportWebVitals.js","index.js"],"names":["FoxCard","img","num","className","src","alt","style","width","App","useState","flexDirValue","setFlexDirValue","flexWrapValue","setFlexWrapValue","justifyContentValue","setJustifyContentValue","alignItemsValue","setAlignItemsValue","wasClicked","setWasClicked","foxes","setFoxes","FlexContainer","styled","div","getRandomInt","max","randNum","Math","floor","random","useEffect","arr","counter","foxPics","map","foxPic","anim","useSpring","config","duration","opacity","id","logo","height","href","target","rel","color","fontWeight","name","onChange","e","value","onClick","val","dummy","document","createElement","body","appendChild","setAttribute","getElementById","select","execCommand","removeChild","copy","span","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ebc241b4.chunk.js","sourcesContent":["function FoxCard({ img, num }) {\n    return (\n        <div className=\"card\">\n            <img src={img} alt=\"fox\" style={{width: \"300px\"}}/>\n            <div className=\"num\">{num}</div>\n        </div>\n    )\n}\n\nexport default FoxCard","export default __webpack_public_path__ + \"static/media/flex-fox.1f3a0f0b.png\";","import FoxCard from './FoxCard'\nimport { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { useSpring, animated } from 'react-spring'\nimport logo from '../images/flex-fox.png'\n\nfunction App() {\n  const [flexDirValue, setFlexDirValue] = useState(\"row\")\n  const [flexWrapValue, setFlexWrapValue] = useState(\"wrap\")\n  const [justifyContentValue, setJustifyContentValue] = useState(\"space-between\")\n  const [alignItemsValue, setAlignItemsValue] = useState(\"center\")\n  const [wasClicked, setWasClicked] = useState(false)\n  const [foxes, setFoxes] = useState([])\n\n  const FlexContainer = styled.div`\n    display: flex;\n    flex-direction: ${flexDirValue};\n    flex-wrap: ${flexWrapValue};\n    justify-content: ${justifyContentValue};\n    align-items: ${alignItemsValue};\n    background-color: #fff1e3;\n    padding-bottom: 75px;\n    margin-left: 10%;\n    margin-right: 10%;\n  `\n\n  function getRandomInt(max) {\n    let randNum = Math.floor(Math.random() * max);\n    if (randNum > 0) {\n      return randNum\n    } else {\n      return 1\n    }\n  }\n\n  useEffect(() => {\n    setFoxes(function() {\n        let arr = []\n        let counter = 0\n        while (counter < getRandomInt(201)) {\n          counter += 1\n          arr = [...arr, {img: `https://randomfox.ca/images/${getRandomInt(124)}.jpg`, num: counter} ]\n        }\n        return arr\n      })\n  }, [])\n  \n  const foxPics = foxes.map(function(foxPic) {\n    return <FoxCard key={foxPic.num}\n                    img={foxPic.img}\n                    num={foxPic.num}\n          />\n  })\n\n  const copy = (val) => {\n    let dummy = document.createElement(\"textarea\");\n    document.body.appendChild(dummy);\n    dummy.setAttribute(\"id\", \"dummy_id\");\n    document.getElementById(\"dummy_id\").value=val;\n    dummy.select();\n    document.execCommand(\"copy\");\n    document.body.removeChild(dummy);\n    setWasClicked(true)\n  }\n\n  const anim = useSpring({\n    config: {\n      duration: 500\n    },\n    opacity: wasClicked ? 1 : 0\n  })\n\n  return (\n    <>\n      <div className=\"page\">\n        <div className=\"sticky\">\n          <div id=\"header\">\n            <div className=\"top\">\n              <img src={logo} alt=\"logo\" style={{height: \"10rem\"}}/>\n              <h2>An adorable Flexbox visualizer.</h2>\n              <h3>Made with the <a href=\"https://randomfox.ca/\" target=\"_blank\" rel=\"noreferrer\">Random Fox API.</a></h3>\n            </div>\n            <div id=\"filters\">\n              <div className=\"form-container\">\n                <div className=\"select-label select-label-bold\" id=\"top-label\">.container &#123; </div><br/>\n                <div className=\"select-block\">\n                  <div className=\"select-label\">display: <span id=\"flex\" style={{ color: \"#4b4b4b\", fontWeight: \"normal\" }}>flex;</span></div><br/>\n                </div>\n                <div className=\"select-block\">\n                  <span className=\"select-label\">flex-direction:</span>\n                  <select name=\"flex-direction\" className=\"dropdown\" onChange={e => {setFlexDirValue(e.target.value); setWasClicked(false)}}>\n                    <option value=\"row\">row;</option>\n                    <option value=\"row-reverse\">row-reverse;</option>\n                    <option value=\"column\">column;</option>\n                    <option value=\"column-reverse\">column-reverse;</option>\n                  </select><br/>\n                </div>\n                <div className=\"select-block\">\n                  <span className=\"select-label\"> flex-wrap:</span>\n                  <select name=\"flex-wrap\" onChange={e => {setFlexWrapValue(e.target.value); setWasClicked(false)}}>\n                    <option value=\"wrap\">wrap;</option>\n                    <option value=\"wrap-reverse\">wrap-reverse;</option>\n                    <option value=\"nowrap\">nowrap;</option>\n                  </select><br/>\n                </div>\n                <div className=\"select-block\">\n                  <span className=\"select-label\"> justify-content:</span>\n                  <select name=\"justify-content\" onChange={e => {setJustifyContentValue(e.target.value); setWasClicked(false)}}>\n                    <option value=\"space-between\">space-between;</option>\n                    <option value=\"space-evenly\">space-evenly;</option>\n                    <option value=\"space-around\">space-around;</option>\n                    <option value=\"center\">center;</option>\n                    <option value=\"flex-start\">flex-start;</option>\n                    <option value=\"flex-end\">flex-end;</option>\n                  </select><br/>\n                </div>\n                <div className=\"select-block\">\n                  <span className=\"select-label\"> align-items:</span>\n                  <select name=\"justify-content\" onChange={e => {setAlignItemsValue(e.target.value); setWasClicked(false)}}>\n                    <option value=\"center\">center;</option>\n                    <option value=\"flex-start\">flex-start;</option>\n                    <option value=\"flex-end\">flex-end;</option>\n                  </select><br/>\n                </div>\n                <span className=\"select-label select-label-bold\" id=\"bottom-label\"> &#125;</span>\n              </div>\n              <button onClick={() => copy(`display: flex;\\nflex-direction: ${flexDirValue};\\nflex-wrap: ${flexWrapValue};\\njustify-content: ${justifyContentValue};\\nalign-items: ${alignItemsValue};`)}>{ !wasClicked ? \"Flex on me!\" : <animated.span style={anim}>Copied code!</animated.span> }</button>\n            </div>\n            <div className=\"footer\">\n              <p>Designed by <a href=\"https://zachkaigler.com/\" target=\"_blank\" rel=\"noreferrer\">Zach Kaigler</a></p>\n            </div>\n          </div>\n        </div>\n        <div className=\"main-content\">\n          <FlexContainer>\n            {foxPics}\n          </FlexContainer>\n        </div>\n      </div>\n      <a href=\"https://github.com/zachkaigler/flex-fox\" id=\"github\" target=\"_blank\" rel=\"noreferrer\"><img src=\"https://i.imgur.com/Yt24doC.png\" alt=\"github\" style={{ height: \"75px\" }} /></a>\n    </>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}